<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.sc.csl.retail.crm</groupId>
  <artifactId>crm-parent</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <description>Parent POM for rwb-lms</description>

  <properties>

    <!-- maven settings -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- java related -->
    <java.version>1.8</java.version>
    <jacoco.version>0.7.7.201606060606</jacoco.version>

    <!-- Spring dependencies -->
    <spring.boot.version>1.4.2.RELEASE</spring.boot.version>
    <spring.cloud.parent.version>Camden.SR2</spring.cloud.parent.version>

    <!-- java object mapper -->
    <modelmapper.starter.version>1.1.0</modelmapper.starter.version>

    <!--jdbc drivers -->
    <h2.version>1.4.181</h2.version>

    <!-- test related dependencies -->
    <rest.assured.version>2.9.0</rest.assured.version>
    <flyway.version>4.0.1</flyway.version>

    <!-- utilities libraries -->
    <guava.version>19.0</guava.version>
	
	<!-- katharsis version -->
	<katharsis.version>2.4.2</katharsis.version>
	
	<!-- reflections version -->
	<reflections.version>0.9.9</reflections.version>

  </properties>

  <distributionManagement>
    <!-- these are placeholders only -->
    <repository>
      <id>lib-release</id>
      <name>internal releases</name>
      <url>http://internal.repo/artifactory/libs-release-local</url>
    </repository>
    <snapshotRepository>
      <id>lib-snapshot</id>
      <name>internal snapshots</name>
      <url>http://internal.repo/artifactory/libs-snapshot-local</url>
    </snapshotRepository>
  </distributionManagement>

  <modules>
    <module>service-support</module>
	  <module>leads-svc</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <!-- basics, the important stuff -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-parent</artifactId>
        <version>${spring.cloud.parent.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Java standards -->
      <dependency>
        <groupId>javax.validation</groupId>
        <artifactId>validation-api</artifactId>
        <version>1.1.0.Final</version>
      </dependency>

		<!--  katharsis jsonapi provider  -->
	<dependency>
		<groupId>io.katharsis</groupId>
	    <artifactId>katharsis-core</artifactId>
		<version>${katharsis.version}</version>
	</dependency>
	<dependency>
		<groupId>io.katharsis</groupId>
		<artifactId>katharsis-spring</artifactId>
		<version>${katharsis.version}</version>
    </dependency>	
    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>${reflections.version}</version>
    </dependency>
    
      <!-- commons util -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>

      <!-- jdbc drivers -->
      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${h2.version}</version>
      </dependency>

      <!-- enable entity mapper support -->
      <dependency>
        <groupId>com.github.jmnarloch</groupId>
        <artifactId>modelmapper-spring-boot-starter</artifactId>
        <version>${modelmapper.starter.version}</version>
      </dependency>

      <!-- flyway db migration -->
      <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-core</artifactId>
        <version>${flyway.version}</version>
      </dependency>

      <!--restassured for testing REST APIs -->
      <dependency>
        <groupId>com.jayway.restassured</groupId>
        <artifactId>spring-mock-mvc</artifactId>
        <version>${rest.assured.version}</version>
      </dependency>

      <!-- flyway test support -->
      <dependency>
        <groupId>org.flywaydb.flyway-test-extensions</groupId>
        <artifactId>flyway-spring-test</artifactId>
        <version>${flyway.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <defaultGoal>clean install</defaultGoal>
    <pluginManagement>
      <plugins>
        <!-- always repackag instead of just package -->
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring.boot.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <!-- test case coverage report -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <version>${jacoco.version}</version>
          <artifactId>jacoco-maven-plugin</artifactId>
          <executions>
            <execution>
              <id>default-prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>default-report</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- test settings -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.17</version>
          <configuration>
            <forkCount>1</forkCount>
            <argLine>-Xmx1024m -Djava.security.egd=file:/dev/./urandom</argLine>
            <includes>
              <include>**/*Test*.java</include>
              <include>**/*Test*.groovy</include>
            </includes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.2</version>
          <configuration>
            <failOnMissingWebXml>false</failOnMissingWebXml>
          </configuration>
        </plugin>
        <!-- get git revision and pacakge into application -->
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>2.2.1</version>
          <executions>
            <execution>
              <goals>
                <goal>revision</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <generateGitPropertiesFile>true</generateGitPropertiesFile>
            <generateGitPropertiesFilename>${project.build.outputDirectory}/build-info.properties</generateGitPropertiesFilename>
            <failOnNoGitDirectory>false</failOnNoGitDirectory>
            <dateFormat>yyyy-MM-dd'T'HH:mm:ss.SSSZ</dateFormat>
            <includeOnlyProperties>
              <includeOnlyProperty>git.commit.id</includeOnlyProperty>
              <includeOnlyProperty>git.branch</includeOnlyProperty>
              <includeOnlyProperty>git.build.time</includeOnlyProperty>
            </includeOnlyProperties>
          </configuration>
        </plugin>
        <!-- add Groovy support -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <configuration>
            <compilerId>javac-compiler</compilerId>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <compilerId>groovy-eclipse-compiler</compilerId>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.groovy</groupId>
              <artifactId>groovy-eclipse-compiler</artifactId>
              <version>2.9.2-01</version>
            </dependency>
            <dependency>
              <groupId>org.codehaus.groovy</groupId>
              <artifactId>groovy-eclipse-batch</artifactId>
              <version>2.4.3-01</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-eclipse-plugin</artifactId>
          <version>2.9</version>
          <configuration>
            <additionalProjectnatures>
              <projectnature>org.eclipse.jdt.groovy.core.groovyNature</projectnature>
            </additionalProjectnatures>
            <classpathContainers>
              <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
              <classpathContainer>GROOVY_DSL_SUPPORT</classpathContainer>
            </classpathContainers>
          </configuration>
        </plugin>

        <!-- to avoid annoying error in Eclipse -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <versionRange>[1.0.0,)</versionRange>
                    <goals>
                      <goal>compile</goal>
                      <goal>testCompile</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute>
                      <runOnIncremental>false</runOnIncremental>
                    </execute>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <versionRange>[0.5,)</versionRange>
                    <goals>
                      <goal>prepare-agent</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <!-- m2e doesn't know what to do with jacoco,
                        let's ignore it or annoying error markers appear
                        see http://wiki.eclipse.org/M2E_plugin_execution_not_covered
                     -->
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
        <!-- end of common plug configuration -->

      </plugins>
    </pluginManagement>

  </build>
</project>
